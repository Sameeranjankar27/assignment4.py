# -*- coding: utf-8 -*-
"""assignment4.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nHu18qYF4B9xkgumg18ZW3pLHoMwVeDM
"""

#1. What exactly is []?

--------->
Its a list contaning no value inside.

#2. In a list of values stored in a variable called spam, how would you assign the value hello as third value.assuming([2,4,6,8,10] are in spam).
#------->


spam=[2,4,6,8,10]
spam[2]="hello"
spam

#Let's pretend the spam includes the list ['a','b','c','d'] for the next three queries.

#3. What is the value of spam[int(int('3' * 2) / 11)]?
spam[int(int('3'*2)/11)]

------>
8 is the answer

#4. What is the value of spam[-1]?
------->
'd' is the answer coz -1 means last index of list.

#5. What is the value of spam[:2]?
----->

:2 means is to 2nd index it means answer is :----> (a,b)

#Let's pretend bacon has the list [3.14,cat, 11, cat, True] for the next three questions.

#6. What is the value of bacon.index(cat)?
----->
answer will be 1.coz in 1st index cat value appers.

#7. How does bacon.append(99) change the look of the list value in bacon?
 -------->
 yes it will change look of this list coz user appending 99 to this list.
 so it will be [3.14,'cat',11,'cat',true,99]

#8. How does bacon.remove(cat) change the look of the list in bacon?
#------>
bacon=[3.14,"cat", 11, "cat", True]
bacon.remove("cat")
bacon

answer is: it will remove 0th index coz it apper 'cat' and it will look like it.

#9. What are the list concatenation and list replication operators?

----->

For list concatation we use '+' and for replication we use'*'.

#10. What is difference between the list methods append() and insert()?
----->

append(): It means it will add value to the list at the end of it.
insert(): It means it will add value anywhere in the list.

#11. What are the two methods for removing items from a list?

--------->

1. del()
2. remove()

#12. Describe how list values and string values are identical.

---------->

Both the list and string have indexes , both can use in loop. also both can pass to len().

#13. What is the difference between tuples and lists?

---------->
list are mutable , user can change value in it or add to it . we can acsess.
tuple are non-mutable , user cannot change anything in it nor add it.we cannont acsess.

#14. How do you type a tuple value that only contains the integer 42?

------>
if we want to write a tuple conating only one value then,
it will be: (42,) , ' , ' is important.

#15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?

---->

The tuple() and list() functions, respectively.

#16.variables that "contain" list values don't actually contain lists directly. What do they contain instead?

------->

They contain references to list values.

#17.What is the difference between copy.copy() and copy.deepcopy()?

---------->

A shallow copy creates a new object which stores the reference of the original elements.


A deep copy creates a new object and recursively adds the copies of nested objects present in the original elements.